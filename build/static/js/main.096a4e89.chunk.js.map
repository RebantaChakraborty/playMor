{"version":3,"sources":["components/AudioBugFixer.js","components/Player.js","components/Song.js","components/util.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["audioBugFixer","isPlaying","currentSongRef","entitySong","current","play","undefined","then","audio","Player","currentSong","setIsPlaying","setCurrentSong","songs","setSongs","useState","currentTime","duration","animationPercentage","currentSongTimeInfo","setCurrentSongTimeInfo","currentSongTimeHandler","e","target","roundedCurrentTime","Math","round","roundedDuration","roundedAnimationPercentage","currentSongTimeFormatHandler","time","floor","slice","skipTrack","skipType","currentTrackIndex","findIndex","song","id","length","useEffect","newSong","map","active","trackAnimationStylePercentage","transform","className","style","background","color","min","max","value","onChange","type","size","icon","faAngleLeft","onClick","pause","faPauseCircle","faPlayCircle","faAngleRight","onLoadedMetadata","onTimeUpdate","ref","src","Song","cover","alt","name","artist","chillHop","uuidv4","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","songList","useRef","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.096a4e89.chunk.js","sourcesContent":["export const audioBugFixer = (isPlaying, currentSongRef) => {\r\n    if (isPlaying) {\r\n        const entitySong = currentSongRef.current.play();\r\n        if (entitySong !== undefined) {\r\n            entitySong.then((audio) => {\r\n                currentSongRef.current.play();\r\n            })\r\n        }\r\n\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleLeft, faAngleRight, faPauseCircle, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\n// import { NULL } from 'node-sass';\r\nimport { audioBugFixer } from './AudioBugFixer';\r\n\r\n\r\nconst Player = ({ currentSong, isPlaying, setIsPlaying, currentSongRef, setCurrentSong, songs, setSongs }) => {\r\n\r\n    //1) To get access to an html element within the DOM , we use the useRef. First it is initialised with a null value and then it is used to create a reference to a DOM element . Once , the reference has been created , then we can use it as we seem fit. For example ,  we used the \"useRef\" here , to create a refence to the audio file in the JSX part . And then in the currentSongHandler(), function we used the reference , to access the link to the song as soon as the play button has been hit.\r\n    //2)isPlaying checks if the song is playing or not and acts accordingly. It is our play/pause button functionality.\r\n    const [currentSongTimeInfo, setCurrentSongTimeInfo] = useState({ currentTime: 0, duration: 0, animationPercentage: 0 });\r\n\r\n    const playSongHandler = () => {\r\n        // currentSongRef.current.play();\r\n        if (!isPlaying) {\r\n            currentSongRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n\r\n        }\r\n        else {\r\n            currentSongRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n\r\n        }\r\n\r\n    }\r\n    const currentSongTimeHandler = (e) => {\r\n        const current = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        const roundedCurrentTime = Math.round(current);\r\n        const roundedDuration = Math.round(duration);\r\n        const roundedAnimationPercentage = Math.round((roundedCurrentTime / roundedDuration) * 100);\r\n        // console.log(roundedAnimationPercentage);\r\n        setCurrentSongTimeInfo({ ...currentSongTimeInfo, currentTime: current, duration, animationPercentage: roundedAnimationPercentage });\r\n\r\n    }\r\n    const currentSongTimeFormatHandler = (time) => {\r\n        // console.log(\"works\");\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n\r\n    };\r\n    const songDragger = (e) => {\r\n        // console.log(e.target.value);\r\n        (currentSongRef.current.currentTime = e.target.value);\r\n        setCurrentSongTimeInfo({ ...currentSongTimeInfo, currentTime: e.target.value });\r\n\r\n\r\n    }\r\n    const skipTrack = (skipType) => {\r\n        let currentTrackIndex = songs.findIndex((song) => song.id === currentSong.id\r\n\r\n        );\r\n\r\n        if (skipType === \"skipBack\") {\r\n            if (currentTrackIndex === 0) {\r\n                currentTrackIndex = songs.length;\r\n            }\r\n            setCurrentSong(songs[(currentTrackIndex - 1) % songs.length]);\r\n\r\n        }\r\n        else {\r\n            setCurrentSong(songs[(currentTrackIndex + 1) % songs.length]);\r\n\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        const newSong = songs.map(song => {\r\n            if (song.id === currentSong.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n\r\n            }\r\n        }\r\n        )\r\n        setSongs(newSong);\r\n    }, [currentSong])\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(\"current time is changing\");\r\n        if (currentSongTimeInfo.currentTime === currentSongTimeInfo.duration && currentSongTimeInfo.duration !== 0) {\r\n            let currentTrackIndex = songs.findIndex((song) => song.id === currentSong.id\r\n\r\n            );\r\n\r\n            // console.log(\"song ended\");\r\n            setCurrentSong(songs[(currentTrackIndex + 1) % songs.length]);\r\n\r\n        }\r\n\r\n    }, [currentSongTimeInfo.currentTime])\r\n\r\n\r\n\r\n    audioBugFixer(isPlaying, currentSongRef);\r\n\r\n\r\n    //Styles here\r\n    const trackAnimationStylePercentage = { transform: `translateX(${currentSongTimeInfo.animationPercentage}%)` }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"Time-control\">\r\n                <p>{currentSongTimeFormatHandler(currentSongTimeInfo.currentTime)}</p>\r\n                <div className=\"trackVisual\" style={{ background: `linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]})` }}>\r\n                    <input min={0} max={currentSongTimeInfo.duration || 0} value={currentSongTimeInfo.currentTime} onChange={songDragger} type=\"range\"></input>\r\n                    <div style={trackAnimationStylePercentage} className=\"trackAnimation\"></div>\r\n                </div>\r\n                <p>{currentSongTimeFormatHandler(currentSongTimeInfo.duration || 0)}</p>\r\n\r\n            </div>\r\n\r\n            <div className=\"Play-control\">\r\n                <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} onClick={() => skipTrack(\"skipBack\")} />\r\n\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"3x\" icon={isPlaying ? faPauseCircle : faPlayCircle} />\r\n\r\n                <FontAwesomeIcon className=\"skip-next\" size=\"2x\" icon={faAngleRight} onClick={() => skipTrack(\"skipNext\")} />\r\n            </div>\r\n            <audio onLoadedMetadata={currentSongTimeHandler} onTimeUpdate={currentSongTimeHandler} ref={currentSongRef} src={currentSong.audio}></audio>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Player;\r\n","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\n\r\nconst Song = ({ currentSong }) => {\r\n    // console.log(currentSong.name);\r\n    return (\r\n        <div className=\"Song-container\">\r\n            <img src={currentSong.cover} alt=\"no-img\"></img>\r\n\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default Song;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n    return ([\r\n        {\r\n            name: \"By Chance\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg\",\r\n            artist: \"SwuM\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=15224\",\r\n            color: [\"#924F2C\", \"#243333\"],\r\n            id: uuidv4(),\r\n\r\n\r\n            active: true\r\n\r\n        },\r\n        {\r\n            name: \"Blue Moon\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg\",\r\n            artist: \"C Y G N\",\r\n            id: uuidv4(),\r\n            color: [\"#E78EF9\", \"#9D98C7\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=14991\",\r\n            active: false\r\n\r\n        },\r\n        {\r\n            name: \"Melodiya\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/75adfe0661d06a9ea66d9c2e99b31e92ae450ebe-1024x1024.jpg\",\r\n            artist: \"Psalm Trees, FloFilz\",\r\n            id: uuidv4(),\r\n            color: [\"#E14837\", \"#F8E564\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=16063\",\r\n            active: false\r\n\r\n        },\r\n        {\r\n            name: \"Playful Obsession\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg\",\r\n            artist: \"C Y G N\",\r\n            id: uuidv4(),\r\n            color: [\"#E78EF9\", \"#9D98C7\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=14983\",\r\n            active: false\r\n\r\n        },\r\n\r\n        {\r\n            name: \"Seascape\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\r\n            artist: \"Makzo\",\r\n            id: uuidv4(),\r\n            color: [\"#D1857E\", \"#385090\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=11773\",\r\n            active: false\r\n\r\n        },\r\n\r\n        {\r\n            name: \"Foggy Road\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\r\n            artist: \"Toonorth\",\r\n            id: uuidv4(),\r\n            color: [\"#072F2D\", \"#5AA6F0\"],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=7834\",\r\n            active: false\r\n\r\n        },\r\n        {\r\n            name: \"Beaver Creek\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Daylight\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Keep Going\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Nightfall\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Reflection\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Under the City Stars\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        }\r\n\r\n\r\n\r\n    ]);\r\n\r\n\r\n\r\n}\r\nexport default chillHop;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport { audioBugFixer } from './AudioBugFixer';\r\n\r\n\r\nconst LibrarySong = ({ song, setCurrentSong, songs, id, currentSongRef, isPlaying }) => {\r\n\r\n    const changeCurrentSong = () => {\r\n        setCurrentSong(song);\r\n        currentSongRef.current.play();\r\n        audioBugFixer(isPlaying, currentSongRef);\r\n        //The above function is the replacement of the code written below. We made a file called AudioBugFixer and the function was created and exported individually. Since we have the same problem in the Player Component we donot have to copy the same code. Just import the component and pss isPlaying and currentSongRef.\r\n        // if (isPlaying) {\r\n        //     const entitySong = currentSongRef.current.play();\r\n        //     if (entitySong !== undefined) {\r\n        //         entitySong.then((audio) => {\r\n        //             currentSongRef.current.play();\r\n        //         })\r\n        //     }\r\n\r\n        // }\r\n        songs.map(song => {\r\n            if (song.id === id) {\r\n                song.active = true;\r\n            }\r\n            else {\r\n                song.active = false;\r\n            }\r\n\r\n        })\r\n    }\r\n    return (\r\n        <div className={`Library-song ${song.active ? \"selectedSong\" : \"\"}`} onClick={changeCurrentSong}>\r\n            <img src={song.cover} alt=\"no-img\"></img>\r\n            <div className=\"songDescription\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({ songs, setCurrentSong, currentSongRef, isPlaying, libraryStatus }) => {\r\n\r\n\r\n    return (\r\n        <div className={`Library ${libraryStatus ? 'openedLibrary' : ''}`} >\r\n            <h2>Library</h2>\r\n            <div className=\"Library-songs\">\r\n\r\n                {songs.map(song => <LibrarySong song={song} setCurrentSong={setCurrentSong} songs={songs} id={song.id} key={song.id} currentSongRef={currentSongRef} isPlaying={isPlaying} />)}\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Library;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n    const toggleLibraryStatus = () => {\r\n        setLibraryStatus(!libraryStatus);\r\n\r\n    }\r\n    return (\r\n        <div className=\"nav\">\r\n            <h1>playMor</h1>\r\n            <button onClick={toggleLibraryStatus}>\r\n                <FontAwesomeIcon icon={faMusic} />\r\n                Library\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Nav;","import React, { useState, useRef } from 'react';\nimport \"./styles/App.scss\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport songList from \"./components/util\";\n//data\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n\n\n\nfunction App() {\n  const [songs, setSongs] = useState(songList());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  //reference to the audio file\n  const currentSongRef = useRef('');\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  return (\n    <div className={`App ${libraryStatus ? \"libraryOpened\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} setCurrentSong={setCurrentSong} />\n      <Player currentSong={currentSong} setCurrentSong={setCurrentSong} isPlaying={isPlaying} setIsPlaying={setIsPlaying} currentSongRef={currentSongRef} songs={songs} setSongs={setSongs} />\n      <Library songs={songs} setCurrentSong={setCurrentSong} currentSongRef={currentSongRef} isPlaying={isPlaying} libraryStatus={libraryStatus} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}